<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원 목록 dao에서 selectList("member.memberList") -->
	<select id="memberList" resultType="com.myshop.dto.MemberDTO">
		select * from member
	</select>
	
	<!-- 회원 수 카운트 dao에서 selectOne("member.memberCount", id)-->
	<select id="memberCount" resultType="Integer">
		select count(*) from member
	</select>
	
	<!-- 회원 정보 보기  dao에서 selectOne("member.getMember", id)-->
	<select id="getMember" resultType="com.myshop.dto.MemberDTO">
		select * from member where id=#{id}
	</select>
	
	<!-- 로그인  : 컨트롤러에서 처리 -->
	<select id="signIn" resultType="com.myshop.dto.MemberDTO" >
		select * from member where id=#{id}
	</select>
	
	<!-- 로그인  : DAO에서 처리 로그인체크 -->
	<select id="loginCheck" resultType="com.myshop.dto.MemberDTO" >
		select id,pw,name from member where id=#{id}
	</select>
			
	<!-- 로그인 : ajax로 Service 에서 처리   -->
	<select id="login" resultType="com.myshop.dto.MemberDTO">
		select id,pw,name from member where id=#{id}		
	</select>
	
	<!-- 회원 가입 -->	
	<insert id="memberInsert">
		insert into member values (#{id}, #{pw}, #{name}, #{email}, #{tel}, #{addr1}, #{addr2}, #{postcode}, default, #{birth}, default, default )
	</insert>
	
	<!-- 회원 정보 수정 -->
	<update id="memberUpdate">
		update member set pw=#{pw} , name=#{name} , email=#{email} , tel=#{tel} , addr1=#{addr1} , addr2=#{addr2} , postcode=#{postcode} where id=#{id} 
	</update>
		
	<!-- 회원 삭제 -->
	<delete id="memberDelete">
		delete member where id = #{id}
	</delete>
		
</mapper>
<!-- namespace나 해당 명령의 id는 중복되면 절대 안됨 -->